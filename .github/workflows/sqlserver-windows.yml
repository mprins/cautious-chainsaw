name: Windows

on:
  workflow_dispatch:
  push:
  pull_request:
  schedule:
    - cron: "17 4 * * SUN"

jobs:
  build:
    name: SQL Server 2019 dev build for ${{ matrix.WINDOWS_OS }}
    runs-on: ${{ matrix.WINDOWS_OS }}
    strategy:
      matrix:
        include:
        - WINDOWS_OS: "windows-2019"
          WINDOWS_TAG: "ltsc2019"

        - WINDOWS_OS: "windows-2022"
          WINDOWS_TAG: "ltsc2022" 

    steps:
      - uses: actions/checkout@v3

      - name: build image for ${{ matrix.WINDOWS_TAG }}
        run: |
          docker info
          docker build --file './Dockerfile' . --build-arg "WINDOWS_TAG=${{ matrix.WINDOWS_TAG }}" --tag 'docker.b3p.nl/cautious-chainsaw/mssql-server-windows-developer:"${{ matrix.WINDOWS_TAG }}"-sql2019'

      - name: start container
        run: |
          docker run --rm --name SQL2019 -e ACCEPT_EULA=Y -e sa_password='Password12!' -p '1433:1433' -d 'docker.b3p.nl/cautious-chainsaw/mssql-server-windows-developer:"${{ matrix.WINDOWS_TAG }}"-sql2019'

      - name: test container
        run: |
          docker logs SQL2019
          docker ps
          echo "Container running? "
          docker inspect -f='{{json .State.Running}}' SQL2019
          echo "Container health: "
          docker inspect -f='{{json .State.Health}}' SQL2019
          docker exec -i SQL2019 sqlcmd -S localhost -U SA -P 'Password12!' -Q 'CREATE DATABASE testingwindows' -d 'master'
          docker exec -i SQL2019 sqlcmd -S localhost -U SA -P 'Password12!' -Q 'SELECT @@version' -d 'testingwindows'
          docker exec -i SQL2019 cmd /c dir 'C:\'
          docker logs SQL2019
          docker stop SQL2019

      - name: docker registry login and push image ${{ matrix.WINDOWS_TAG }}
        if: ${{ github.ref == 'refs/heads/main' }}
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login docker.b3p.nl -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push 'docker.b3p.nl/cautious-chainsaw/mssql-server-windows-developer:"${{ matrix.WINDOWS_TAG }}"-sql2019'


